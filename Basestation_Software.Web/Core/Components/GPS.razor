@implements IDisposable
@inject IJSRuntime _IJSRuntime

<style>
    .gps {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        grid-template-rows: repeat(10, 1fr) 250px;
        justify-items: center;
    }
    .gps p {
        margin: 0;
    }
</style>

<script>
    // Create global roverAttitude collection if it doesn't exist.
    if (window.roverAttitude === undefined) { window.roverAttitude = {}; }

    window.roverAttitude.@(ID) = {
        dotNetComponent: null,
        svg: null,
        svgPitch: null,
        svgRoll: null,
        svgPointer: null,
        init: (dotNetComponent) => {
            this.dotNetComponent = dotNetComponent;
            this.svg = document.getElementById("@(ID)");
            this.svgPitch = this.svg.getElementById("pitch");
            this.svgRoll = this.svg.getElementById("roll");
            this.svgPointer = this.svg.getElementById("pointer");
        },
        update: (pitch, roll) => {
            // Pitch relative to upright [-90D,90U]
            if (pitch > 90) { pitch = 90; }
            else if (pitch < -90) { pitch = -90; }
            // Roll relative to upright [-180L, 180R]
            if (roll > 180) { roll = 180; }
            else if (roll < -180) { roll = -180; }
            this.pitch.transform.baseVal.getItem(0).setTranslate(-60, pitch - 60);
            this.pitch.transform.baseVal.getItem(1).setRotate(roll, 90, 90 - pitch);
            this.roll.transform.baseVal.getItem(0).setRotate(roll, 30, 30);
        }
    };
</script>

<div class="card full-height">
    <div class="card-header">
        <h5 class="mr-auto">NAV</h5>
    </div>
    <div class="card-body gps w-100">
        <p>Lat [&#176;]</p><p>Lon [&#176;]</p><p>Alt [m]</p>
        <p>@($"{Lat:00.0000000}")</p><p>@($"{Lon:000.0000000}")</p><p>@($"{Alt:000.00}")</p>
        <p>Satellites [&#176;]</p><p /><p>Heading [&#176;]</p>
        <p>@($"{Satellites:00}")</p><p /><p>@($"{Heading:00.00000}")</p>
        <p>Horiz [m]</p><p>Vert [m]</p><p>Hdg [&#176;]</p>
        <p>@($"{AccurHor:0000.000}")</p><p>@($"{AccurVer:0000.000}")</p><p>@($"{AccurHdg:000.00000}")</p>
        <p>Pitch [&#176;]</p><p>Yaw [&#176;]</p><p>Roll [&#176;]</p>
        <p>@($"{Pitch:00.0}")</p><p>@($"{Yaw:00.0}")</p><p>@($"{Roll:00.0}")</p>
        <p style="grid-area: 9 / 1 / 10 / 4">XYZ Acceleration [ms&#8315;&#178;]</p>
        <p>@($"{AccelX:00.0}")</p><p>@($"{AccelY:00.0}")</p><p>@($"{AccelZ:00.0}")</p>
        <svg id="@ID" style="grid-area: 11 / 1 / 12 / 4; place-self: stretch stretch;" viewBox="0 0 60 60">
            <style>
                .elev {
                    stroke-width: 0.3;
                    stroke: #ffff;
                    fill: none;
                }

                .sky {
                    stroke: none;
                    fill: #0000ff;
                }

                .ground {
                    stroke: none;
                    fill: #6b3e00;
                }

                .elev-label {
                    font-size: 3px;
                    fill: #ffff;
                }

                .wing {
                    fill: #ff0f;
                }

                .roll-pointer {
                    stroke-width: 0.5;
                    stroke: #ff0f;
                }

                .roll-arc {
                    stroke-width: 0.5;
                    stroke: #ffff;
                    fill: none
                }

                .roll-0 {
                    fill: #ffff;
                    stroke: none;
                }

                .roll-45 {
                    fill: #ffff;
                    stroke: none;
                }
            </style>
            <g id="pitch" transform="translate(-60, -60) rotate(0, 90, 90)">
                <rect class="sky" x="0" y="-60" width="180" height="150" />
                <rect class="ground" x="0" y="90" width="180" height="150" />
                <text class="elev-label" text-anchor="end" dominant-baseline="central" x="86" y="0">90</text>
                <text class="elev-label" text-anchor="start" dominant-baseline="central" x="94" y="0">90</text>
                <text class="elev-label" text-anchor="end" dominant-baseline="central" x="86" y="10">80</text>
                <text class="elev-label" text-anchor="start" dominant-baseline="central" x="94" y="10">80</text>
                <text class="elev-label" text-anchor="end" dominant-baseline="central" x="86" y="20">70</text>
                <text class="elev-label" text-anchor="start" dominant-baseline="central" x="94" y="20">70</text>
                <text class="elev-label" text-anchor="end" dominant-baseline="central" x="86" y="30">60</text>
                <text class="elev-label" text-anchor="start" dominant-baseline="central" x="94" y="30">60</text>
                <text class="elev-label" text-anchor="end" dominant-baseline="central" x="86" y="40">50</text>
                <text class="elev-label" text-anchor="start" dominant-baseline="central" x="94" y="40">50</text>
                <text class="elev-label" text-anchor="end" dominant-baseline="central" x="86" y="50">40</text>
                <text class="elev-label" text-anchor="start" dominant-baseline="central" x="94" y="50">40</text>
                <text class="elev-label" text-anchor="end" dominant-baseline="central" x="86" y="60">30</text>
                <text class="elev-label" text-anchor="start" dominant-baseline="central" x="94" y="60">30</text>
                <text class="elev-label" text-anchor="end" dominant-baseline="central" x="86" y="70">20</text>
                <text class="elev-label" text-anchor="start" dominant-baseline="central" x="94" y="70">20</text>
                <text class="elev-label" text-anchor="end" dominant-baseline="central" x="86" y="80">10</text>
                <text class="elev-label" text-anchor="start" dominant-baseline="central" x="94" y="80">10</text>
                <text class="elev-label" text-anchor="end" dominant-baseline="central" x="86" y="90">0</text>
                <text class="elev-label" text-anchor="start" dominant-baseline="central" x="94" y="90">0</text>
                <text class="elev-label" text-anchor="end" dominant-baseline="central" x="86" y="100">-10</text>
                <text class="elev-label" text-anchor="start" dominant-baseline="central" x="94" y="100">-10</text>
                <text class="elev-label" text-anchor="end" dominant-baseline="central" x="86" y="110">-20</text>
                <text class="elev-label" text-anchor="start" dominant-baseline="central" x="94" y="110">-20</text>
                <text class="elev-label" text-anchor="end" dominant-baseline="central" x="86" y="120">-30</text>
                <text class="elev-label" text-anchor="start" dominant-baseline="central" x="94" y="120">-30</text>
                <text class="elev-label" text-anchor="end" dominant-baseline="central" x="86" y="130">-40</text>
                <text class="elev-label" text-anchor="start" dominant-baseline="central" x="94" y="130">-40</text>
                <text class="elev-label" text-anchor="end" dominant-baseline="central" x="86" y="140">-50</text>
                <text class="elev-label" text-anchor="start" dominant-baseline="central" x="94" y="140">-50</text>
                <text class="elev-label" text-anchor="end" dominant-baseline="central" x="86" y="150">-60</text>
                <text class="elev-label" text-anchor="start" dominant-baseline="central" x="94" y="150">-60</text>
                <text class="elev-label" text-anchor="end" dominant-baseline="central" x="86" y="160">-70</text>
                <text class="elev-label" text-anchor="start" dominant-baseline="central" x="94" y="160">-70</text>
                <text class="elev-label" text-anchor="end" dominant-baseline="central" x="86" y="170">-80</text>
                <text class="elev-label" text-anchor="start" dominant-baseline="central" x="94" y="170">-80</text>
                <text class="elev-label" text-anchor="end" dominant-baseline="central" x="86" y="180">-90</text>
                <text class="elev-label" text-anchor="start" dominant-baseline="central" x="94" y="180">-90</text>
                <line class="elev" x1="87.11" y1="0" x2="92.89" y2="0" />
                <line class="elev" x1="89.28" y1="2.5" x2="90.72" y2="2.5" />
                <line class="elev" x1="88.56" y1="5" x2="91.44" y2="5" />
                <line class="elev" x1="89.28" y1="7.5" x2="90.72" y2="7.5" />
                <line class="elev" x1="87.11" y1="10" x2="92.89" y2="10" />
                <line class="elev" x1="89.28" y1="12.5" x2="90.72" y2="12.5" />
                <line class="elev" x1="88.56" y1="15" x2="91.44" y2="15" />
                <line class="elev" x1="89.28" y1="17.5" x2="90.72" y2="17.5" />
                <line class="elev" x1="87.11" y1="20" x2="92.89" y2="20" />
                <line class="elev" x1="89.28" y1="22.5" x2="90.72" y2="22.5" />
                <line class="elev" x1="88.56" y1="25" x2="91.44" y2="25" />
                <line class="elev" x1="89.28" y1="27.5" x2="90.72" y2="27.5" />
                <line class="elev" x1="87.11" y1="30" x2="92.89" y2="30" />
                <line class="elev" x1="89.28" y1="32.5" x2="90.72" y2="32.5" />
                <line class="elev" x1="88.56" y1="35" x2="91.44" y2="35" />
                <line class="elev" x1="89.28" y1="37.5" x2="90.72" y2="37.5" />
                <line class="elev" x1="87.11" y1="40" x2="92.89" y2="40" />
                <line class="elev" x1="89.28" y1="42.5" x2="90.72" y2="42.5" />
                <line class="elev" x1="88.56" y1="45" x2="91.44" y2="45" />
                <line class="elev" x1="89.28" y1="47.5" x2="90.72" y2="47.5" />
                <line class="elev" x1="87.11" y1="50" x2="92.89" y2="50" />
                <line class="elev" x1="89.28" y1="52.5" x2="90.72" y2="52.5" />
                <line class="elev" x1="88.56" y1="55" x2="91.44" y2="55" />
                <line class="elev" x1="89.28" y1="57.5" x2="90.72" y2="57.5" />
                <line class="elev" x1="87.11" y1="60" x2="92.89" y2="60" />
                <line class="elev" x1="89.28" y1="62.5" x2="90.72" y2="62.5" />
                <line class="elev" x1="88.56" y1="65" x2="91.44" y2="65" />
                <line class="elev" x1="89.28" y1="67.5" x2="90.72" y2="67.5" />
                <line class="elev" x1="87.11" y1="70" x2="92.89" y2="70" />
                <line class="elev" x1="89.28" y1="72.5" x2="90.72" y2="72.5" />
                <line class="elev" x1="88.56" y1="75" x2="91.44" y2="75" />
                <line class="elev" x1="89.28" y1="77.5" x2="90.72" y2="77.5" />
                <line class="elev" x1="87.11" y1="80" x2="92.89" y2="80" />
                <line class="elev" x1="89.28" y1="82.5" x2="90.72" y2="82.5" />
                <line class="elev" x1="88.56" y1="85" x2="91.44" y2="85" />
                <line class="elev" x1="89.28" y1="87.5" x2="90.72" y2="87.5" />
                <line class="elev" x1="0" y1="90" x2="180" y2="90" />
                <line class="elev" x1="89.28" y1="92.5" x2="90.72" y2="92.5" />
                <line class="elev" x1="88.56" y1="95" x2="91.44" y2="95" />
                <line class="elev" x1="89.28" y1="97.5" x2="90.72" y2="97.5" />
                <line class="elev" x1="87.11" y1="100" x2="92.89" y2="100" />
                <line class="elev" x1="89.28" y1="102.5" x2="90.72" y2="102.5" />
                <line class="elev" x1="88.56" y1="105" x2="91.44" y2="105" />
                <line class="elev" x1="89.28" y1="107.5" x2="90.72" y2="107.5" />
                <line class="elev" x1="87.11" y1="110" x2="92.89" y2="110" />
                <line class="elev" x1="89.28" y1="112.5" x2="90.72" y2="112.5" />
                <line class="elev" x1="88.56" y1="115" x2="91.44" y2="115" />
                <line class="elev" x1="89.28" y1="117.5" x2="90.72" y2="117.5" />
                <line class="elev" x1="87.11" y1="120" x2="92.89" y2="120" />
                <line class="elev" x1="89.28" y1="122.5" x2="90.72" y2="122.5" />
                <line class="elev" x1="88.56" y1="125" x2="91.44" y2="125" />
                <line class="elev" x1="89.28" y1="127.5" x2="90.72" y2="127.5" />
                <line class="elev" x1="87.11" y1="130" x2="92.89" y2="130" />
                <line class="elev" x1="89.28" y1="132.5" x2="90.72" y2="132.5" />
                <line class="elev" x1="88.56" y1="135" x2="91.44" y2="135" />
                <line class="elev" x1="89.28" y1="137.5" x2="90.72" y2="137.5" />
                <line class="elev" x1="87.11" y1="140" x2="92.89" y2="140" />
                <line class="elev" x1="89.28" y1="142.5" x2="90.72" y2="142.5" />
                <line class="elev" x1="88.56" y1="145" x2="91.44" y2="145" />
                <line class="elev" x1="89.28" y1="147.5" x2="90.72" y2="147.5" />
                <line class="elev" x1="87.11" y1="150" x2="92.89" y2="150" />
                <line class="elev" x1="89.28" y1="152.5" x2="90.72" y2="152.5" />
                <line class="elev" x1="88.56" y1="155" x2="91.44" y2="155" />
                <line class="elev" x1="89.28" y1="157.5" x2="90.72" y2="157.5" />
                <line class="elev" x1="87.11" y1="160" x2="92.89" y2="160" />
                <line class="elev" x1="89.28" y1="162.5" x2="90.72" y2="162.5" />
                <line class="elev" x1="88.56" y1="165" x2="91.44" y2="165" />
                <line class="elev" x1="89.28" y1="167.5" x2="90.72" y2="167.5" />
                <line class="elev" x1="87.11" y1="170" x2="92.89" y2="170" />
                <line class="elev" x1="89.28" y1="172.5" x2="90.72" y2="172.5" />
                <line class="elev" x1="88.56" y1="175" x2="91.44" y2="175" />
                <line class="elev" x1="89.28" y1="177.5" x2="90.72" y2="177.5" />
                <line class="elev" x1="87.11" y1="180" x2="92.89" y2="180" />
                <line class="elev" x1="89.28" y1="182.5" x2="90.72" y2="182.5" />
                <line class="elev" x1="88.56" y1="185" x2="91.44" y2="185" />
                <line class="elev" x1="89.28" y1="187.5" x2="90.72" y2="187.5" />
            </g>
            <g id="roll" transform="rotate(0, 30, 30)">
                <path class="roll-arc" d="M 10.5 30 a 19.5 19.5 180 0 1 39 0" />
                <line class="roll-arc" x1="7" y1="30" x2="10.5" y2="30" />
                <line class="roll-arc" x1="7" y1="30" x2="10.5" y2="30" transform="rotate(30, 30, 30)" />
                <circle class="roll-45" cx="8" cy="30" r="0.5" y2="30" transform="rotate(45, 30, 30)" />
                <line class="roll-arc" x1="7" y1="30" x2="10.5" y2="30" transform="rotate(60, 30, 30)" />
                <line class="roll-arc" x1="8.5" y1="30" x2="10.5" y2="30" transform="rotate(70, 30, 30)" />
                <line class="roll-arc" x1="8.5" y1="30" x2="10.5" y2="30" transform="rotate(80, 30, 30)" />
                <polygon class="roll-0" points="28.5 7, 31.5 7, 30 10.5" />
                <line class="roll-arc" x1="8.5" y1="30" x2="10.5" y2="30" transform="rotate(100, 30, 30)" />
                <line class="roll-arc" x1="8.5" y1="30" x2="10.5" y2="30" transform="rotate(110, 30, 30)" />
                <circle class="roll-45" cx="8" cy="30" r="0.5" y2="30" transform="rotate(135, 30, 30)" />
                <line class="roll-arc" x1="7" y1="30" x2="10.5" y2="30" transform="rotate(120, 30, 30)" />
                <line class="roll-arc" x1="7" y1="30" x2="10.5" y2="30" transform="rotate(150, 30, 30)" />
                <line class="roll-arc" x1="7" y1="30" x2="10.5" y2="30" transform="rotate(180, 30, 30)" />
            </g>
            <g id="pointer">
                <path class="wing" d="M 16 35 L 30 30 44 35 39 35 30 30 21 35 Z" />
                <line class="roll-pointer" x1="10" y1="30" x2="15" y2="30" />
                <line class="roll-pointer" x1="50" y1="30" x2="45" y2="30" />
                <polygon class="wing" points="28.5 14, 31.5 14, 30 10.5" />
            </g>
        </svg>
    </div>
</div>

@code
{
    // Component parameters.
    [Parameter]
    public string ID { get; set; } = "";

    // State
    private double Lat = 0, Lon = 0, Alt = 0;
    private float AccurHor = 0, AccurVer = 0, AccurHdg = 0;
    private float Heading = 0;
    private uint Satellites = 0;
    private float Pitch = 0, Yaw = 0, Roll = 0;
    private float AccelX = 0, AccelY = 0, AccelZ = 0;

    // Declare page member variables.
    private string jsInteropName;
    private Random random;


    protected override void OnInitialized()
    {
        random = new Random();
        this.jsInteropName = $"window.roverAttitude.{ID}";
        new System.Threading.Timer(async _ =>  // async void
        {
            // Update display with dummy data.
            Lat = Math.Clamp(Lat + random.NextDouble() - 0.5, -90, 90);
            Lon = Math.Clamp(Lat + random.NextDouble() - 0.5, -180, 180);
            Alt = Math.Clamp(Alt + random.NextDouble() - 0.5, 1200, 1400);
            AccurHor = (float)Math.Clamp(AccurHor + random.NextDouble() * 0.01 - 0.005, -10, 10);
            AccurVer = (float)Math.Clamp(AccurVer + random.NextDouble() * 0.01 - 0.005, -10, 10);
            AccurHdg = (float)Math.Clamp(AccurHdg + random.NextDouble() - 0.5, -360, 360);
            Heading = (float)Math.Clamp(Heading + random.NextDouble() - 0.5, -180, 180);
            Satellites = (uint)Math.Min(0, Math.Max((int)Satellites + random.Next(-1, 2), 24));
            Pitch = (float)Math.Clamp(Pitch + random.NextDouble() - 0.5, -90, 90);
            Yaw = (float)Math.Clamp(Yaw + random.NextDouble() - 0.5, -180, 180);
            Roll = (float)Math.Clamp(Roll + random.NextDouble() - 0.5, -180, 180);
            AccelX = (float)Math.Clamp(AccelX + random.NextDouble() - 0.5, -15, 15);
            AccelY = (float)Math.Clamp(AccelY + random.NextDouble() - 0.5, -15, 15);
            AccelZ = (float)Math.Clamp(AccelZ + random.NextDouble() - 0.5, -15, 15);
            // we need StateHasChanged() because this is an async void handler
            // we need to Invoke it because we could be on the wrong Thread
            await InvokeAsync(StateHasChanged);
        }, null, 0, 100);
    }


    protected override async Task OnInitializedAsync()
    {
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Initialize attitude indicator.
            await _IJSRuntime.InvokeVoidAsync($"{jsInteropName}.init", [DotNetObjectReference.Create(this)]);
        } else
        {
            // TODO: update state from rovecomm
            await _IJSRuntime.InvokeVoidAsync($"{jsInteropName}.update", [Pitch, Roll]);
        }
    }

    void IDisposable.Dispose() { }
}
